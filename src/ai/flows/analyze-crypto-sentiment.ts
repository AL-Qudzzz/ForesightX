// This file is generated by Firebase Genkit.
'use server';

/**
 * @fileOverview A crypto news sentiment analysis AI agent.
 *
 * - analyzeCryptoSentiment - A function that handles the crypto news sentiment analysis process.
 * - AnalyzeCryptoSentimentInput - The input type for the analyzeCryptoSentiment function.
 * - AnalyzeCryptoSentimentOutput - The return type for the analyzeCryptoSentiment function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeCryptoSentimentInputSchema = z.object({
  newsHeadlines: z
    .string()
    .describe('A comma separated list of recent crypto news headlines.'),
});
export type AnalyzeCryptoSentimentInput = z.infer<typeof AnalyzeCryptoSentimentInputSchema>;

const AnalyzeCryptoSentimentOutputSchema = z.object({
  sentimentScore: z
    .number()
    .describe(
      'A numerical score between -1 and 1 representing the sentiment of the news headlines. -1 is very negative sentiment, 1 is very positive sentiment, and 0 is neutral sentiment.'
    ),
  sentimentSummary: z
    .string()
    .describe('A short summary of the sentiment of the news headlines.'),
});
export type AnalyzeCryptoSentimentOutput = z.infer<typeof AnalyzeCryptoSentimentOutputSchema>;

export async function analyzeCryptoSentiment(
  input: AnalyzeCryptoSentimentInput
): Promise<AnalyzeCryptoSentimentOutput> {
  return analyzeCryptoSentimentFlow(input);
}

const prompt = ai.definePrompt({
  name: 'analyzeCryptoSentimentPrompt',
  input: {schema: AnalyzeCryptoSentimentInputSchema},
  output: {schema: AnalyzeCryptoSentimentOutputSchema},
  prompt: `You are an AI assistant specializing in analyzing the sentiment of cryptocurrency news headlines.

  Analyze the following news headlines and provide a sentiment score between -1 and 1, and a short summary of the sentiment.

  News Headlines: {{{newsHeadlines}}}
  `,
});

const analyzeCryptoSentimentFlow = ai.defineFlow(
  {
    name: 'analyzeCryptoSentimentFlow',
    inputSchema: AnalyzeCryptoSentimentInputSchema,
    outputSchema: AnalyzeCryptoSentimentOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
